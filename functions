#!/usr/bin/env bash
function kp() {
  # kill process that is running on port $1
  sudo kill -9 $(sudo lsof -t -i:$1);
}

function gp() {
  # get process that is running on port $1
  sudo lsof -t -i:$1
}

function mkd() {
  # make directory $1 and enter it
  mkdir -p "$@" && cd "$_";
}

function fs() {
  # get file of current directory and descendants with size
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh;
  else
    local arg=-sh;
  fi;
  if [[ -n "$@" ]]; then
    du $arg -- "$@";
  else
    du $arg .[^.]* ./*;
  fi;
}

function fr() {
  command -v gsed > /dev/null
  if [[ $? -eq 0 ]]; then 
    find "$1" -type f -exec gsed -i "s/$2/$3/g" {} +
  else
    find "$1" -type f -exec sed -i "s/$2/$3/g" {} +
  fi
}

function diff() {
  git diff --no-index --color-word "$@";
}

function ta() {
  # excecute command in all tmux panes
  for _pane in $(tmux list-panes -F '#P'); do
    for var in "$@"; do
      tmux send-keys -t ${_pane} $var;
      tmux send-keys -t ${_pane} Space;
    done;
    tmux send-key -t ${_pane} Enter;
  done;
}

function z() {
  d=$(date +'%Y%m%d')
  base_dir=$HOME/zet/$d
  dinit $base_dir/README.adoc
}

function dinit() {
  if [ ! -f "$1" ]; then
    mkdir $base_dir
    echo ":toc: macro
:toc-title:
:toclevels: 9

# 

toc::[]" > "$1"
  fi
  nvim $1
}

scratch() {
  rnd=$(head /dev/urandom | LC_ALL=C tr -dc 'a-z' | fold -w 8 | head -n 1)
  mkdir -p /tmp/$rnd
  cd /tmp/$rnd
  nvim "scratch.$1"
}

checkout() {
  git fetch
  git checkout $1 origin/$1
}

dt() {
  dotnet test --filter=FullyQualifiedName~$1
}

dtw() {
  dotnet watch test --filter=FullyQualifiedName~$1
}

nettest() {
  dotnet test -l "console;verbosity=detailed" --filter="FullyQualifiedName~$1"
}

main() {
  git checkout origin/main
  git pull origin main
  git branch -D main
  git checkout -b main
}

